function description() {
  // You are given a text, which contains different english letters and punctuation
  // symbols. You should find the most frequent letter in the text. The letter
  // returned must be in lower case.

  // While checking for the most wanted letter, casing does not matter, so for
  // the purpose of your search, "A" == "a". Make sure you do not count punctuation
  // symbols, digits and whitespaces, only letters.

  // If you have two or more letters with the same frequency, then return the
  // letter which comes first in the latin alphabet. For example -- "one" contains
  // "o", "n", "e" only once for each, thus we choose "e".

  // Input:
  //   A text for analysis as a string.
  // Output:
  //   The most frequent letter in lower case as a string.
  // Precondition:
  //   A text contains only ASCII symbols.
  //   0 < len(text) â‰¤ 105
}

function mostWanted(data) {
  const cmp = function(a, b) {
      if (a > b) return +1;
      if (a < b) return -1;
      return 0;
  }
  letter_counts = {}
  count_array = []
  res = data.split('').filter(letter => letter.match(/[a-zA-Z]/))
  res.forEach(function(letter){
    letter=letter.toLowerCase();
    letter_counts[letter] ? letter_counts[letter] += 1 : letter_counts[letter] = 1
  })
  for(var key in letter_counts){
    count_array.push([key, letter_counts[key]])
  }
  res = count_array.sort(function(a, b) {
      return cmp(a[1],b[1]) || cmp(b[0],a[0])
  })
  return res.slice(-1)[0][0]

}



mostWanted(a)

var assert = require('assert');

if (!global.is_checking) {
    assert.equal(mostWanted("Hello World!"), "l", "1st example");
    assert.equal(mostWanted("How do you do?"), "o", "2nd example");
    assert.equal(mostWanted("One"), "e", "3rd example");
    assert.equal(mostWanted("Oops!"), "o", "4th example");
    assert.equal(mostWanted("AAaooo!!!!"), "a", "Letters");
    console.log("Coding complete? Click 'Check' to review your tests and earn cool rewards!");
}

